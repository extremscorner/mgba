if(DEFINED ENV{DEVKITRICE})
	set(DEVKITRICE $ENV{DEVKITRICE})
else()
	message(FATAL_ERROR "Could not find DEVKITRICE in environment")
endif()

set(extension)
if (CMAKE_HOST_WIN32)
	set(extension .exe)
endif()

set(CMAKE_PROGRAM_PATH ${DEVKITRICE}/bin)
set(cross_prefix ${CMAKE_PROGRAM_PATH}/powerpc-eabi-)
set(common_flags "-mogc")

set(CMAKE_SYSTEM_NAME Generic CACHE INTERNAL "system name")
set(CMAKE_SYSTEM_PROCESSOR powerpc CACHE INTERNAL "processor")
set(CMAKE_LIBRARY_ARCHITECTURE powerpc-none-eabi CACHE INTERNAL "abi")

set(CMAKE_AR ${cross_prefix}ar${extension} CACHE INTERNAL "archiver")
set(CMAKE_RANLIB ${cross_prefix}ranlib${extension} CACHE INTERNAL "archiver")
set(CMAKE_C_COMPILER ${cross_prefix}gcc${extension} CACHE INTERNAL "c compiler")
set(CMAKE_CXX_COMPILER ${cross_prefix}g++${extension} CACHE INTERNAL "cxx compiler")
set(CMAKE_ASM_COMPILER ${cross_prefix}gcc${extension} CACHE INTERNAL "assembler")
set(CMAKE_C_FLAGS ${common_flags} CACHE INTERNAL "c compiler flags")
set(CMAKE_ASM_FLAGS ${common_flags} CACHE INTERNAL "c compiler flags")
set(CMAKE_CXX_FLAGS ${common_flags} CACHE INTERNAL "cxx compiler flags")
set(CMAKE_LINKER ${cross_prefix}ld${extension} CACHE INTERNAL "linker")

set(CMAKE_EXE_LINKER_FLAGS ${common_flags} CACHE INTERNAL "exe link flags")
set(CMAKE_MODULE_LINKER_FLAGS ${common_flags} CACHE INTERNAL "module link flags")
set(CMAKE_SHARED_LINKER_FLAGS ${common_flags} CACHE INTERNAL "shared link flags")

set(CMAKE_FIND_ROOT_PATH ${DEVKITRICE}/powerpc-eabi ${DEVKITRICE}/usr)
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER CACHE INTERNAL "")
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY CACHE INTERNAL "")
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY CACHE INTERNAL "")
set(PKG_CONFIG_EXECUTABLE "/dev/null" CACHE INTERNAL "" FORCE)

set(GAMECUBE ON)
